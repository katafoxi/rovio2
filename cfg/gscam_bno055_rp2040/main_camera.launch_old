<launch>
    <!-- article about camera setup: https://clover.coex.tech/camera_setup -->

    <arg name="direction_z" default="down"/> <!-- direction the camera points: down, up -->
    <arg name="direction_y" default="backward"/> <!-- direction the camera cable points: backward, forward -->
    <arg name="throttled_topic" default="true"/> <!-- enable throttled image topic -->
    <arg name="throttled_topic_rate" default="5.0"/> <!-- throttled image topic rate -->
    <arg name="rectify" default="false"/> <!-- enable rectification -->
    <arg name="simulator" default="false"/>
    
    <!-- camera node -->
    <!--https://index.ros.org/p/cv_camera/github-OTL-cv_camera/-->
    <!-- cv_camera_node args-->
    <arg name="rate"                    default="100"/> <!-- poll rate -->
    <arg name="device_path"             default="/dev/video0"/> <!-- v4l2 device_path -->
    <arg name="frame_id"                default="main_camera_optical"/> <!-- v4l2 device_path -->
    <arg name="image_width"             default="1920" />
    <arg name="image_height"            default="1020" />
    <arg name="camera_info_url"         default="" />
    <arg name="capture_delay"           default="0" />
    <arg name="rescale_camera_info"     default="false"/> <!-- automatically rescale camera calibration info -->
    <!--  CV_CAP_PROP_*-->
    <arg name="cv_cap_prop_fps"         default="30" /> <!-- camera FPS -->


    <node if="$(eval direction_z == 'down' and direction_y == 'backward')"
    pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="main_camera_frame" 
    args="0.05 0 -0.07 -1.5707963 0 3.1415926 base_link main_camera_optical"/>

    <node if="$(eval direction_z == 'down' and direction_y == 'forward')" 
    pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="main_camera_frame" 
    args="0.05 0 -0.07 1.5707963 0 3.1415926 base_link main_camera_optical"/>

    <node if="$(eval direction_z == 'up' and direction_y == 'backward')" 
    pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="main_camera_frame" 
    args="0.05 0 0.07 1.5707963 0 0 base_link main_camera_optical"/>

    <node if="$(eval direction_z == 'up' and direction_y == 'forward')" 
    pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="main_camera_frame" 
    args="0.05 0 0.07 -1.5707963 0 0 base_link main_camera_optical"/>

    <node if="$(eval direction_z == 'forward')" 
    pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="main_camera_frame" 
    args="0.03 0 0.05 -1.5707963 0 -1.5707963 base_link main_camera_optical"/>

    <node if="$(eval direction_z == 'backward')" 
    pkg="tf2_ros" 
    type="static_transform_publisher" 
    name="main_camera_frame" 
    args="-0.03 0 0.05 1.5707963 0 -1.5707963 base_link main_camera_optical"/>

    <!-- Template for custom camera orientation -->
    <!-- Camera position and orientation are represented by base_link -> main_camera_optical transform -->
    <!-- static_transform_publisher arguments: x y z yaw pitch roll frame_id child_frame_id -->
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="main_camera_frame" args="0.05 0 -0.07 -1.5707963 0 3.1415926 base_link main_camera_optical"/> -->

    <!-- camera nodelet manager -->
    <node pkg="nodelet" type="nodelet" 
    name="main_camera_nodelet_manager" 
    args="manager" 
    output="screen" 
    clear_params="true" 
    respawn="true">
        <param name="num_worker_threads" value="2"/>
    </node>

    <!-- camera node -->
    <node pkg="nodelet" 
    type="nodelet" 
    name="main_camera" 
    args="load cv_camera/CvCameraNodelet main_camera_nodelet_manager" 
    launch-prefix="rosrun clover waitfile $(arg device_path)" 
    clear_params="true" 
    unless="$(arg simulator)" 
    respawn="true">
        <param name="rate"                  value="$(arg rate)"/>
        <param name="device_path"           value="$(arg device_path)"/>
        <param name="frame_id"              value="$(arg frame_id)"/>
        <param name="image_width"           value="$(arg image_width)"/>
        <param name="image_height"          value="$(arg image_height)"/>
        <param name="camera_info_url"       value="$(arg camera_info_url)"/>
        <param name="capture_delay"         value="$(arg capture_delay)"/> 
        <param name="rescale_camera_info"   value="$(arg rescale_camera_info)"/> 
        <param name="cv_cap_prop_fps"       value="$(arg cv_cap_prop_fps)"/> 

    </node>

    <!-- camera visualization markers -->
    <node pkg="clover" type="camera_markers" ns="main_camera" name="main_camera_markers">
        <param name="scale" value="3.0"/>
    </node>

    <!-- image topic throttled -->
    <node pkg="topic_tools" 
    name="main_camera_throttle" 
    type="throttle" ns="main_camera"
        args="messages image_raw $(arg throttled_topic_rate) image_raw_throttled" if="$(arg throttled_topic)"/>

    <!-- rectified image topic -->
    <node pkg="nodelet" type="nodelet" 
    name="rectify" 
    args="load image_proc/rectify main_camera_nodelet_manager" 
    if="$(arg rectify)">
        <remap from="image_mono" to="main_camera/image_raw"/>
        <remap from="camera_info" to="main_camera/camera_info"/>
        <remap from="image_rect" to="main_camera/image_rect"/>
    </node>
</launch>
