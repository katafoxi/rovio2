; Вы можете частично переопределить набор параметров в этом файле, создав собственное подмножество параметров в отдельном информационном файле и включив его в:
; #include "/home/user/workspace/rovio/cfg/rovio_custom.info"
Common
{
	doVECalibration true;		Следует ли калибровать внешние компоненты камеры-IMU онлайн?
	depthType 1;				Тип параметризации глубины (0: нормальный, 1: обратная глубина, 2: логарифмический, 3: гиперболический)
	verbose false;				Является ли многословие активным?
}
Camera0
{
	CalibrationFile ;			Файл калибровки камеры для встроенных функций
	qCM_x  0.00666398307551;	X-вход IMU в кватерион камеры (Гамильтон)
	qCM_y  -0.0079168224269;	Y-вход IMU в кватерион камеры (Гамильтон)
	qCM_z  -0.701985972528;		Z-вход IMU в кватерион камеры (Гамильтон)
	qCM_w   0.712115587266;		W-вход IMU в кватерион камеры (Гамильтон)
	MrMC_x -0.0111674199187;	X-вход IMU в вектор камеры (выраженный в IMU CF) [м]
	MrMC_y -0.0574640920022;	Y-вход IMU в вектор камеры (выраженный в IMU CF) [м]
	MrMC_z 0.0207586947896;		Z-вход IMU в вектор камеры (выраженный в IMU CF) [м]
}
Camera1
{
	CalibrationFile ;			Файл калибровки камеры для встроенных функций
	qCM_x  0.00151329637706;	X-вход IMU в кватерион камеры (Гамильтон)
	qCM_y  -0.0123329249764;	Y-вход IMU в кватерион камеры (Гамильтон)
	qCM_z  -0.702657352863;		Z-вход IMU в кватерион камеры (Гамильтон)
	qCM_w  0.711419885414;		W-вход IMU в кватерион камеры (Гамильтон)
	MrMC_x -0.0091929160801;	X-вход IMU в вектор камеры (выраженный в IMU CF) [м]
	MrMC_y 0.0540646643676;		Y-вход IMU в вектор камеры (выраженный в IMU CF) [м]
	MrMC_z 0.0190387660614;		Z-вход IMU в вектор камеры (выраженный в IMU CF) [м]
}

Init
{
    State
    {
        pos_0 0;		 X-ввод начальной позиции (от мира к IMU в мире) [м]
        pos_1 0;		 Y-ввод начальной позиции (от мира к IMU в мире) [м]
        pos_2 0;		 Z-вход начальной позиции (от мира к IMU в мире) [м]
        vel_0 0;		 X-ввод начальной скорости (робоцентрический, IMU) [м/с]
        vel_1 0;		 Y-ввод начальной скорости (робоцентрический, IMU) [м/с]
        vel_2 0;		 Z-ввод начальной скорости (робоцентрический, IMU) [м/с]
        acb_0 0;		 X-ввод смещения акселерометра [м/с^2]
        acb_1 0;		 Y-ввод смещения акселерометра [м/с^2]
        acb_2 0;		 Z-запись смещения акселерометра [м/с^2]
        gyb_0 0;		 X-вход смещения гироскопа [рад/с]
        gyb_1 0;		 Y-ввод смещения гироскопа [рад/с]
        gyb_2 0;		 Z-вход смещения гироскопа [рад/с]
        att_x 0;		 X-запись начального отношения (ИМУ к миру, Гамильтон)
        att_y 0;		 Y-запись исходного отношения (ИМУ к миру, Гамильтон)
        att_z 0;		 Z-вход исходного отношения (ИМУ к миру, Гамильтон)
        att_w 1;		 W-запись исходного отношения (ИМУ к миру, Гамильтон)
    }
    Covariance
    {
        pos_0 0.0001;	 X-ковариация начальной позиции [м^2]
        pos_1 0.0001;	 Y-ковариация начальной позиции [м^2]
        pos_2 0.0001;	 Z-ковариация исходного положения [м^2]
        vel_0 1.0;		 X-ковариация начальной скорости [м^2/с^2]
        vel_1 1.0;		 Y-ковариация начальной скорости [м^2/с^2]
        vel_2 1.0;		 Z-ковариация начальной скорости [м^2/с^2]
        acb_0 4e-4;		 X-ковариация начального смещения акселерометра [м^2/с^4]
        acb_1 4e-4;		 Y-ковариация начального смещения акселерометра [м^2/с^4]
        acb_2 4e-4;		 Z-ковариация начального смещения акселерометра [м^2/с^4]
        gyb_0 3e-4;		 X-ковариация начального смещения гироскопа [рад^2/с^2]
        gyb_1 3e-4;		 Y-ковариация начального смещения гироскопа [рад^2/с^2]
        gyb_2 3e-4;		 Z-ковариация начального смещения гироскопа [рад^2/с^2]
        vep 0.0001;		 Ковариация исходных внешних характеристик линейной камеры и IMU, одинаковая для всех записей [m^2]
        att_0 0.1;		 X-ковариация начального положения [рад^2]
        att_1 0.1;		 Y-ковариация начального положения [рад^2]
        att_2 0.1;		 Z-ковариация начального положения [рад^2]
        vea 0.01;		 Ковариация начальных внешних характеристик вращающейся камеры-IMU, одинаковая для всех записей [rad^2]
    }
}
ImgUpdate
{
	updateVecNormTermination 1e-4;
	maxNumIteration 20;
    doPatchWarping true;			  Должны ли заплатки деформироваться
    doFrameVisualisation false;		  Стоит ли визуализировать кадры
    visualizePatches false;			  Должны ли быть визуализированы патчи
    useDirectMethod true;			  Должна ли инновация EKF основываться на прямой ошибке интенсивности (в т.ч. ошибке перепроецирования)
    startLevel 2;					  Самый высокий используемый уровень исправления (должен быть меньше, чем жестко запрограммированный параметр шаблона).
    endLevel 1;						  Самый низкий уровень исправления, который используется
    nDetectionBuckets 100;			  Количество сегментов дискретизации, использованных при выборе кандидатов
    MahalanobisTh 9.21;				  Порог Махаланобиса для обновления, 5.8858356
    UpdateNoise
    {
        pix 2;						  Ковариация, используемая для ошибки перепроецирования, 1/фокусное расстояние составляет примерно 1 пиксель стандартного [рад] (~1/f ~ 1/400^2= 1/160000)
        int 400;					  Ковариация, используемая для фотометрической ошибки [интенсивность^2]
    }
    initCovFeature_0 0.5;			  Ковариация начального расстояния (относительно глубины инициализации [м^2/м^2])
    initCovFeature_1 1e-5;			  Ковариация для начального вектора пеленга, x-компонент [рад^2]
    initCovFeature_2 1e-5;			  Ковариация для начального вектора пеленга, y-компонент [рад^2]
    initDepth 0.5;					  Начальное значение параметра начального расстояния
    startDetectionTh 0.8;			  Порог обнаружения новых функций (мин: 0, макс: 1)
    scoreDetectionExponent 0.25;	  Экспонента, используемая для взвешивания расстояния между кандидатами.
    penaltyDistance 100;			  Максимальное расстояние, на которое налагается штраф при группировании [рисунок]
    zeroDistancePenalty 100;		  Штраф за нулевое расстояние (макс.: nDetectionBuckets)
    statLocalQualityRange 10;		  Количество кадров для локальной оценки качества
    statLocalVisibilityRange 100;	  Количество кадров для оценки локальной видимости
    statMinGlobalQualityRange 100;	  Минимальное количество кадров для получения максимального глобального качества
    trackingUpperBound 0.9;			  Порог локального качества для минимального общего глобального качества
    trackingLowerBound 0.8;			  Порог локального качества для максимального общего глобального качества
    minTrackedAndFreeFeatures 0.75;	  Минимальное количество функций, которые либо отслеживаются, либо бесплатны.
    removalFactor 1.1;				  Фактор принудительного удаления функции, если ее недостаточно бесплатно
    minRelativeSTScore 0.75;		  Минимальный относительный показатель ST для извлечения нового исправления функции
    minAbsoluteSTScore 5.0;			  Минимальный абсолютный показатель ST для извлечения нового исправления функции
    minTimeBetweenPatchUpdate 1.0;	  Минимальное время между извлечением нового многоуровневого патча [с]
    fastDetectionThreshold 5;		  Быстрый порог детектора углов при добавлении новой функции
    alignConvergencePixelRange 10;	  Предполагаемый диапазон сходимости для выравнивания изображения (масштабируется в зависимости от уровня) [пиксели]
    alignCoverageRatio 2;			  Сколько сигм неопределенности должно быть охвачено адаптивным выравниванием?
    alignMaxUniSample 1;			  Максимальное количество семян выравнивания с одной стороны -> общее количество образцов = 2n+1. Осторожность может стать оченьcostly if diverging!
    patchRejectionTh 50.0;										Если ошибка средней интенсивности больше этого значения, функция отклоняется [интенсивность], если меньше 0, проверка не выполняется.
    alignmentHuberNormThreshold 10;								Порог ошибки интенсивности для нормы Губера (активен, если > 0)
    alignmentGaussianWeightingSigma -1;							Ширина гаусса, которая используется для взвешивания ошибок пикселей (включено, если > 0).
    alignmentGradientExponent 0.0;								Экспонента, используемая для взвешивания остатков на основе градиента
    useIntensityOffsetForAlignment true;						Следует ли учитывать смещение интенсивности между патчами?
    useIntensitySqewForAlignment true;							Следует ли учитывать разницу интенсивности между участками
    removeNegativeFeatureAfterUpdate true;						Должен ли быть удален объект с отрицательным расстоянием
    maxUncertaintyToDepthRatioForDepthInitialization 0.3;		Если установлено значение 0,0, глубина инициализируется стандартным значением, указанным выше, в противном случае ROVIO пытается определить среднюю глубину в каждом кадре.
    useCrossCameraMeasurements true;							Следует ли использовать перекрестные измерения между кадрами. Возможно, отключается на этапе калибровки.
    doStereoInitialization true;								Следует ли использовать стереосоответствие для инициализации функции.
    noiseGainForOffCamera 10.0;									Добавлен коэффициент шума обновления, если не основная камера.
    discriminativeSamplingDistance 0.02;						Расстояние выборки для проверки дискриминативности патча (если <= 0,0 проверка не выполняется).
    discriminativeSamplingGain 1.1;								Усиление порогового значения, выше которого должны находиться выборки (если <= 1,0, используется patchRejectionTh).
    MotionDetection
    {
    	isEnabled 0;											Включено ли обнаружение движения
	    rateOfMovingFeaturesTh 0.5;								Количество функций с движением для общего обнаружения движения
	    pixelCoordinateMotionTh 1.0;							Порог обнаружения движения для исправленных [пикселей]
	    minFeatureCountForNoMotionDetection 5;					Минимальное количество объектов в кадре для обнаружения движения
	}
    ZeroVelocityUpdate
    {
        UpdateNoise
        {
            vel_0 0.01;											X-ковариация обновления нулевой скорости [м^2/с^2]
            vel_1 0.01;											Y-ковариация обновления нулевой скорости [м^2/с^2]
            vel_2 0.01;											Обновление Z-ковариации нулевой скорости [м^2/с^2]
        }
        MahalanobisTh0 7.689997599999999;						Расстояние Махаланобида для обновлений нулевой скорости
        minNoMotionTime 1.0;									Минимальная продолжительность бездействия
        isEnabled 0;											Если применяется обновление нулевой скорости, работает только в том случае, если MotionDetection.isEnabled имеет значение true.
    }
}
Prediction
{
    PredictionNoise
    {
        pos_0 1e-4;								Параметр X-ковариации прогнозирования положения [м^2/с]
        pos_1 1e-4;								Параметр Y-ковариации прогнозирования положения [м^2/с]
        pos_2 1e-4;								Параметр Z-ковариации прогнозирования положения [м^2/с]
        vel_0 4e-5;								Параметр X-ковариации прогноза скорости [м^2/с^3]
        vel_1 4e-5;								Параметр Y-ковариации прогноза скорости [м^2/с^3]
        vel_2 4e-5;								Параметр Z-ковариации прогноза скорости [м^2/с^3]
        acb_0 1e-8;								Параметр X-ковариации прогноза смещения акселерометра [м^2/с^5]
        acb_1 1e-8;								Параметр Y-ковариации прогнозирования смещения акселерометра [м^2/с^5]
        acb_2 1e-8;								Параметр Z-ковариации прогнозирования смещения акселерометра [м^2/с^5]
        gyb_0 3.8e-7;							Параметр X-ковариации прогноза смещения гироскопа [рад^2/с^3]
        gyb_1 3.8e-7;							Параметр Y-ковариации прогноза смещения гироскопа [рад^2/с^3]
        gyb_2 3.8e-7;							Параметр Z-ковариации прогноза смещения гироскопа [рад^2/с^3]
        vep 1e-8;								Параметр ковариации линейного внешнего предсказания [м^2/с]
        att_0 7.6e-7;							Параметр X-ковариации прогнозирования ориентации [рад^2/с]
        att_1 7.6e-7;							Параметр Y-ковариации прогнозирования ориентации [рад^2/с]
        att_2 7.6e-7;							Параметр Z-ковариации прогнозирования ориентации [рад^2/с]
        vea 1e-8;								Параметр ковариации предсказания внешних свойств вращения [рад^2/с]
        dep 0.0001;							    Ковариационный параметр прогнозирования расстояния [м^2/с]
        nor 0.00001;							Ковариационный параметр прогнозирования вектора направления [рад^2/с]
    }
    MotionDetection
    {
	    inertialMotionRorTh 0.1;				Порог скорости вращения для обнаружения движения [рад/с]
	    inertialMotionAccTh 0.5;				Порог ускорения для обнаружения движения [м/с^2]
	}
}
PoseUpdate
{
    UpdateNoise
    {
        pos_0 0.01;							Обновление X-ковариации измерения линейной позы [м^2]
        pos_1 0.01;							Обновление измерения Y-ковариации линейной позы [м^2]
        pos_2 0.01;							Обновление Z-ковариации измерения линейной позы [м^2]
        att_0 0.01;							Обновление измерения X-ковариации вращательной позы [рад^2]
        att_1 0.01;							Обновление измерения Y-ковариации вращательной позы [рад^2]
        att_2 0.01;							Обновление Z-ковариации измерения ротационной позы [рад^2]
    }
	init_cov_IrIW 1;							Ковариация начальной позы между инерциальными кадрами, линейная часть [м^2]
	init_cov_qWI 1;								Ковариация начальной позы между инерциальными кадрами, вращательная часть [рад^2]
	init_cov_MrMV 1;							Ковариация начальной позы между инерциальными кадрами, линейная часть [м^2]
	init_cov_qVM 1;								Ковариация начальной позы между инерциальными кадрами, вращательная часть [рад^2]
    pre_cov_IrIW 1e-4;							Параметр ковариации позы между инерциальными кадрами, линейная часть [м^2/с]
    pre_cov_qWI 1e-4;							Параметр ковариации позы между инерциальными кадрами, вращательная часть [рад^2/с]
    pre_cov_MrMV 1e-4;							Параметр ковариации позы между инерциальными кадрами, линейная часть [м^2/с]
    pre_cov_qVM 1e-4;							Параметр ковариации позы между инерциальными кадрами, вращательная часть [рад^2/с]
    MahalanobisTh0 12.6511204;					Порог расстояния Махалонобиса для измерения позы
	doVisualization false;						Стоит ли визуализировать измеренные позы
	enablePosition true;						Стоит ли использовать линейную часть при обновлении
	enableAttitude true;						Следует ли использовать часть вращения во время обновления (например, установить значение false eif при кормлении GPS-измерениями)
	noFeedbackToRovio true;						По умолчанию обновление позы используется только для выравнивания системы координат. Установите значение false, если ROVIO должен извлечь выгоду из заданных измерений.
	doInertialAlignmentAtStart true;			Должно ли преобразование между I и W быть явно вычислено и установлено при первом измерении позы?
	timeOffset 0.0;								Смещение времени добавлено к меткам времени измерения позы.
    useOdometryCov false;                       Следует ли масштабировать ковариацию позиции UpdateNoise с использованием ковариации в сообщении одометрии?
    qVM_x 0;									X-ввод кватериона, представляющего IMU, в систему координат опорного тела измерения позы (Гамильтон)
    qVM_y 0;									Y-ввод кватериона, представляющего IMU, в систему координат опорного тела для измерения позы (Гамильтон)
    qVM_z 0;									Z-ввод кватериона, представляющего IMU, в систему координат опорного тела для измерения позы (Гамильтон)
    qVM_w 1;									W-ввод кватериона, представляющего IMU, в систему координат опорного тела измерения позы (Гамильтон)
    MrMV_x 0;									X-ввод вектора, представляющего IMU, в опорную систему координат тела для измерения позы
    MrMV_y 0;									Y-ввод вектора, представляющего IMU, в опорную систему координат тела для измерения позы
    MrMV_z 0;									Z-ввод вектора, представляющего IMU, в опорную систему координат тела для измерения позы
    qWI_x 0;									X-ввод кватериона, представляющего мир, для ссылки на инерциальную систему координат измерения позы (Гамильтон)
    qWI_y 0;									Y-ввод кватериона, представляющего мир, для ссылки на инерциальную систему координат измерения позы (Гамильтон)
    qWI_z 0;									Z-запись кватериона, представляющего мир, для ссылки на инерциальную систему координат измерения позы (Гамильтон)
    qWI_w 1;									W-ввод кватериона, представляющего мир, для ссылки на инерциальную систему координат измерения позы (Гамильтон)
    IrIW_x 0;									X-ввод вектора, представляющего мир, для ссылки на инерциальную систему координат измерения позы
    IrIW_y 0;									Y-ввод вектора, представляющего мир, для ссылки на инерциальную систему координат измерения позы
    IrIW_z 0;									Z-ввод вектора, представляющего мир, для ссылки на инерциальную систему координат измерения позы
}
VelocityUpdate
{
    UpdateNoise
    {
        vel_0 0.0001
        vel_1 0.0001
        vel_2 0.0001
    }
    MahalanobisTh0 7.689997599999999
    qAM_x 0
    qAM_y 0
    qAM_z 0
    qAM_w 1
}
